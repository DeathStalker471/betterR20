{const t={},e=d20.Campaign.activePage(),s=$('\n\t\t<div><h4 class="ui-dialog-buttonpane" style="margin: 0px;padding: 0px 0px 20px 0px;">\n\t\t\tTokens with issues\n\t\t\t<button type="button" class="toggle-cors" style="float: right;height: 25px;margin:0px 0px 0px 7px;padding: 5px;box-sizing: border-box;position: relative;top: -4px;">\n\t\t\t\tToggle CORS\n\t\t\t</button>\n\t\t\t<a class="tipsy-n-right showtip pictos" style="float:right" title="\n\t\t\t\t<div style=&quot;background:black;width:250px;margin:-5px;padding:5px;&quot;>\n\t\t\t\t\t<p style=&quot;font-size:11px;line-height:16px&quot;>CORS stands for Cross-Origin Resource Sharing and is meant to prevent potential exploits of resources hosted on different sites.</p>\n\t\t\t\t\t<p style=&quot;font-size:11px;line-height:16px&quot;>We can\'t verify images hosted on sites that block CORS requests (typically every service not meant to be used as CDN), so each such image is listed when you press Toggle CORS.</p>\n\t\t\t\t</div>\n\t\t\t">?</a>\n\t\t</h4><style>.tokenlist .cors {display:none} .tokenlist.show-cors .cors {display:block}</style></div>'),i=$('<div class="tokenlist">No tokens found</div>');s.append(i);const o=e=>{const s=e.name?`<span style="font-family:Pictos">U</span> ${e.name}`:e.filename,o=(i.find("select").length||i.html('<p class="cors" style="white-space:break-spaces;">Showing CORS-blocked tokens. If you see them in the map - no need to change anything</p>'),$(`<p class="${e.cors?"cors":""}">\n\t\t\t<label>\n\t\t\t\t<img src="${e.filesrc}" alt="Token" style="max-width:32px;max-height:32px;">\n\t\t\t\t<span style="\n\t\t\t\t\tdisplay:inline-block;\n\t\t\t\t\twidth: ${e.cors?"160px":"175px"};\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tvertical-align: middle;\n\t\t\t\t">${s}</span>\n\t\t\t\t${e.cors?'<a class="tipsy-n-right showtip pictos" title="Can\'t verify due to CORS">?</a>':""}\n\t\t\t\t<a class="tipsy-n-right showtip pictos" title="URL: ${e.src}">A</a>\n\t\t\t\t<select data-id="${e.id}" style="width:125px">\n\t\t\t\t\t<option value="skip">-Skip (don't do anything)</option>\n\t\t\t\t\t<option value="delete">Delete token</option>\n\t\t\t\t\t${e.reset?'<option value="reset">Set placeholder image</option>':""}\n\t\t\t\t\t${e.restore?`<option value="restore" ${e.forceRestore?"selected":""}>Restore proxied URL</option>`:""}\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t</p>`));t[e.id]=e,i.append(o)};e.thegraphics.models.forEach((t=>{if("image"!==t.attributes.type)return;const e={id:t.id,atr:t.attributes,src:t.attributes.imgsrc,name:t.attributes.name,ref:t};e.src.includes("imgsrv.roll20.net/?src=")?(e.filesrc=decodeURIComponent(e.src.split("?src=")[1]?.split("&cb=")[0]),e.filename=e.src.split("?src=")[1]?.split("&cb=")[0]?.split("/").last(),$.get(e.filesrc).done((function(t){e.restore=!0,e.forceRestore=!0,o(e)})).fail((function(t){t.status||(e.restore=!0),e.reset=!0,o(e)}))):$.get(e.src).fail((function(t){t.status||(e.cors=!0),e.filesrc=t.status?"/images/character.png":e.src,e.filename=e.src?.split("/").last()?.split("?")[0],e.reset=!0,o(e)}))})),s.dialog({autoopen:!0,width:400,title:e.attributes.name||"Review found tokens",buttons:{Apply:()=>{i.find("select").each(((e,s)=>{const i=$(s),o=i.data("id");switch(i.val()){case"delete":t[o]?.ref.destroy();break;case"reset":t[o]?.ref.save({imgsrc:"/images/character.png"});break;case"restore":t[o]?.ref.save({imgsrc:t[o].filesrc});break}})),s.off(),s.dialog("destroy").remove(),d20.engine.redrawScreenNextTick()},Cancel:()=>{s.off(),s.dialog("destroy").remove()}},open:()=>{s.on("click",".toggle-cors",(()=>{i.toggleClass("show-cors")}))},close:()=>{s.off(),s.dialog("destroy").remove()}})}